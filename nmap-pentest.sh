#!/usr/bin/env bash
set -o errexit -o nounset -o pipefail

sudo apt-get update
VERSION=v2.1.0
curl https://github.com/vdjagilev/nmap-formatter/releases/download/$VERSION/nmap-formatter-linux-amd64.tar.gz --output nmap-formatter.tar.gz -L
tar -xzvf nmap-formatter.tar.gz
sudo mv ./nmap-formatter /usr/bin/nmap-formatter
sudo apt-get install -y sqlite3 nmap 

rm -rf /home/nmap && mkdir -p /home/nmap/result && cd /home/nmap

IP_ENDPOINTS="$FCR $DO_PRIME $DO_HOME $HETZNER1 $HETZNER2 $HETZNER3"

# Function to perform NMAP scan and save results to SQLite database
perform_nmap_scan() {
    local host=$1
    local output_file=$2
    local provider="Unknown"

    # Determine provider based on IP address
    declare -A IP_PROVIDER_MAP
    IP_PROVIDER_MAP[$FCR]="FCR"
    IP_PROVIDER_MAP[$DO_PRIME]="DigitalOcean"
    IP_PROVIDER_MAP[$DO_HOME]="DigitalOcean"
    IP_PROVIDER_MAP[$HETZNER1]="Hetzner"
    IP_PROVIDER_MAP[$HETZNER2]="Hetzner"
    IP_PROVIDER_MAP[$HETZNER3]="Hetzner"

    # set provider
    provider="${IP_PROVIDER_MAP[$host]}"
    
    echo "Performing NMAP scan for host: $host (Provider: $provider)"
    #nmap -p- --max-rtt-timeout 100ms -A "$host" -oX "$output_file"
    nmap -p- -T4 --max-rtt-timeout 100ms "$host" -oX "$output_file"


    echo "Saving NMAP results to SQLite database"
    nmap-formatter sqlite "$output_file" --sqlite-dsn nmap.db
    
    # Create boundary table if it doesn't exist
    sqlite3 nmap.db "CREATE TABLE IF NOT EXISTS boundary (host TEXT, provider TEXT);"

    # Updating provider for the scanned host
    sqlite3 nmap.db "INSERT INTO boundary (host, provider) VALUES ('$host', '$provider');"
}

# Perform NMAP scans for each host and save results to SQLite database
for IP in $IP_ENDPOINTS
do
perform_nmap_scan "$IP" "$IP.xml"
done

sudo cp /home/nmap/nmap.db  /home/nmap/result/nmap.db
echo "All NMAP scans completed and result saved to SQLite database file at /home/nmap/result/nmap.db"
